spring.application.name=api-gateway

# Configuration de Spring Cloud Gateway
spring.cloud.discovery.enabled=true
spring.cloud.gateway.discovery.locator.enabled=true

# Timeout et gestion des erreurs
spring.cloud.gateway.httpclient.connect-timeout=5000
spring.cloud.gateway.httpclient.response-timeout=10000

# Configuration Keycloak
spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/mrecords
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://localhost:8080/realms/mrecords/protocol/openid-connect/certs

# Routes (routage statique)
spring.cloud.gateway.routes[0].id=USER-PROFILE-MANAGEMENT
spring.cloud.gateway.routes[0].uri=http://localhost:8081
spring.cloud.gateway.routes[0].predicates[0]=Path=/doctors/**,/patients/**
spring.cloud.gateway.routes[0].filters[0]=AddRequestHeader=X-Request-Foo, Bar

spring.cloud.gateway.routes[1].id=Auth-service
spring.cloud.gateway.routes[1].uri=http://localhost:8086
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/auth/**
spring.cloud.gateway.routes[1].filters[0]=AddRequestHeader=X-Request-Foo, Bar

# Server configuration
server.port=8088

# Eureka configuration
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}
eureka.instance.port=8088
eureka.instance.lease-expiration-duration-in-seconds=10

# Actuator configuration
management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

